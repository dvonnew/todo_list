(()=>{"use strict";var t={426:(t,n,e)=>{e.d(n,{Z:()=>o});var i=e(537),s=e.n(i),r=e(645),a=e.n(r)()(s());a.push([t.id,'body, html{\n    height: 100%;\n    width: 100%;\n    margin: 0;\n    padding: 0;\n    font-family: BlinkMacSystemFont, -apple-system, "Segoe UI", "Roboto", \n    "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", \n    "Helvetica Neue", "Helvetica", "Arial", sans-serif;\n}\n\n#layout{\n    height: 100%;\n    width: 100%;\n    margin: 0;\n    padding: 0;\n}\n\n#header{\n    height: 60px;\n    width: 100%;\n    padding-top: 10px;\n    padding-left:10px;\n    box-sizing: border-box;\n    color: white;\n    font-size: 24px;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    background-color: rgb(64, 64, 107);\n}\n\n#contentContainer{\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n}\n\n/* NavBar Styles Section */\n\n#sidebarBox{\n    height: 100%;\n    width: 25%;\n    background-color: rgb(202, 202, 202);\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n}\n\n#listDisplay{\n    height: 50%;\n    width: 80%;\n    display: flex;\n    flex-direction: column;\n}\n\n#defaultProjectList{\n    margin-top: 10px;\n    height: 30%;\n    display: flex;\n    flex-direction: column;\n\n}\n\n#userProjects{\n    height:70%;\n    display: flex;\n    flex-direction: column;\n}\n\n#userProjectsLists{\n    height:80%;\n    display: flex;\n    flex-direction: column;\n}\n\n.navButton{\n    border: none;\n    border-radius: 5px;\n    font-size: 18px;\n    background-color: rgb(202, 202, 202);\n    height: 30px;\n    width: 100%;\n    text-align: left;    \n}\n\n.navButton:hover{\n    background-color: rgb(139, 139, 139);\n}\n\n/* Display Box Styles Section */\n\n#displayBox{\n    height: 100%;\n    width: 75%;\n    background-color: rgb(231, 231, 231);\n    display: flex;\n    justify-content: center;\n    \n}\n\n#taskListDisplay{\n    height: 80%;\n    width: 90%;\n    margin-top: 5%;\n    vertical-align: top;\n}\n\n#taskDisplayHeader{\n    margin-bottom: 3%;\n    height: 40px;\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n#addTaskButton{\n    border: .5px solid gray;\n    border-radius: 5px;\n    font-size: 14px;\n    background-color: rgb(202, 202, 202);\n    height: 30px;\n    width: 90px;\n    text-align: left; \n}\n\n#addTaskButton:hover{\n    background-color: rgb(139, 139, 139);\n}\n\n/* task dislpay styles section */\n\n.taskDisplay{\n    height: 25px;\n    width: 100%;\n    text-align: left;\n    display: grid;\n    border-radius: 5px;\n    border: 1px solid rgb(255, 255, 255);\n    grid-template-columns: .5fr 1fr 5fr 2fr 1fr;\n    vertical-align: middle;\n}\n\n.taskPriority{\n    height: 100%\n}\n\n.low{\n    background-color: green;\n}\n\n.medium{\n    background-color: yellow;\n}\n\n.high{\n    background-color: red;\n}\n\n.taskCompletion{\n    height: 100%;\n}\n\n.taskTitle{\n    height: 100%;\n    font-size: 14px;\n}\n\n.taskDueDate{\n    height: 100%;\n}\n\n.taskEditor{\n    height:100%;\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,WAAW;IACX,SAAS;IACT,UAAU;IACV;;sDAEkD;AACtD;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,SAAS;IACT,UAAU;AACd;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,iBAAiB;IACjB,iBAAiB;IACjB,sBAAsB;IACtB,YAAY;IACZ,eAAe;IACf,aAAa;IACb,2BAA2B;IAC3B,mBAAmB;IACnB,kCAAkC;AACtC;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,aAAa;IACb,mBAAmB;AACvB;;AAEA,0BAA0B;;AAE1B;IACI,YAAY;IACZ,UAAU;IACV,oCAAoC;IACpC,aAAa;IACb,sBAAsB;IACtB,2BAA2B;IAC3B,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,UAAU;IACV,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,gBAAgB;IAChB,WAAW;IACX,aAAa;IACb,sBAAsB;;AAE1B;;AAEA;IACI,UAAU;IACV,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,UAAU;IACV,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,eAAe;IACf,oCAAoC;IACpC,YAAY;IACZ,WAAW;IACX,gBAAgB;AACpB;;AAEA;IACI,oCAAoC;AACxC;;AAEA,+BAA+B;;AAE/B;IACI,YAAY;IACZ,UAAU;IACV,oCAAoC;IACpC,aAAa;IACb,uBAAuB;;AAE3B;;AAEA;IACI,WAAW;IACX,UAAU;IACV,cAAc;IACd,mBAAmB;AACvB;;AAEA;IACI,iBAAiB;IACjB,YAAY;IACZ,WAAW;IACX,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;AACvB;;AAEA;IACI,uBAAuB;IACvB,kBAAkB;IAClB,eAAe;IACf,oCAAoC;IACpC,YAAY;IACZ,WAAW;IACX,gBAAgB;AACpB;;AAEA;IACI,oCAAoC;AACxC;;AAEA,gCAAgC;;AAEhC;IACI,YAAY;IACZ,WAAW;IACX,gBAAgB;IAChB,aAAa;IACb,kBAAkB;IAClB,oCAAoC;IACpC,2CAA2C;IAC3C,sBAAsB;AAC1B;;AAEA;IACI;AACJ;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,WAAW;AACf",sourcesContent:['body, html{\n    height: 100%;\n    width: 100%;\n    margin: 0;\n    padding: 0;\n    font-family: BlinkMacSystemFont, -apple-system, "Segoe UI", "Roboto", \n    "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", \n    "Helvetica Neue", "Helvetica", "Arial", sans-serif;\n}\n\n#layout{\n    height: 100%;\n    width: 100%;\n    margin: 0;\n    padding: 0;\n}\n\n#header{\n    height: 60px;\n    width: 100%;\n    padding-top: 10px;\n    padding-left:10px;\n    box-sizing: border-box;\n    color: white;\n    font-size: 24px;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    background-color: rgb(64, 64, 107);\n}\n\n#contentContainer{\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n}\n\n/* NavBar Styles Section */\n\n#sidebarBox{\n    height: 100%;\n    width: 25%;\n    background-color: rgb(202, 202, 202);\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n}\n\n#listDisplay{\n    height: 50%;\n    width: 80%;\n    display: flex;\n    flex-direction: column;\n}\n\n#defaultProjectList{\n    margin-top: 10px;\n    height: 30%;\n    display: flex;\n    flex-direction: column;\n\n}\n\n#userProjects{\n    height:70%;\n    display: flex;\n    flex-direction: column;\n}\n\n#userProjectsLists{\n    height:80%;\n    display: flex;\n    flex-direction: column;\n}\n\n.navButton{\n    border: none;\n    border-radius: 5px;\n    font-size: 18px;\n    background-color: rgb(202, 202, 202);\n    height: 30px;\n    width: 100%;\n    text-align: left;    \n}\n\n.navButton:hover{\n    background-color: rgb(139, 139, 139);\n}\n\n/* Display Box Styles Section */\n\n#displayBox{\n    height: 100%;\n    width: 75%;\n    background-color: rgb(231, 231, 231);\n    display: flex;\n    justify-content: center;\n    \n}\n\n#taskListDisplay{\n    height: 80%;\n    width: 90%;\n    margin-top: 5%;\n    vertical-align: top;\n}\n\n#taskDisplayHeader{\n    margin-bottom: 3%;\n    height: 40px;\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n#addTaskButton{\n    border: .5px solid gray;\n    border-radius: 5px;\n    font-size: 14px;\n    background-color: rgb(202, 202, 202);\n    height: 30px;\n    width: 90px;\n    text-align: left; \n}\n\n#addTaskButton:hover{\n    background-color: rgb(139, 139, 139);\n}\n\n/* task dislpay styles section */\n\n.taskDisplay{\n    height: 25px;\n    width: 100%;\n    text-align: left;\n    display: grid;\n    border-radius: 5px;\n    border: 1px solid rgb(255, 255, 255);\n    grid-template-columns: .5fr 1fr 5fr 2fr 1fr;\n    vertical-align: middle;\n}\n\n.taskPriority{\n    height: 100%\n}\n\n.low{\n    background-color: green;\n}\n\n.medium{\n    background-color: yellow;\n}\n\n.high{\n    background-color: red;\n}\n\n.taskCompletion{\n    height: 100%;\n}\n\n.taskTitle{\n    height: 100%;\n    font-size: 14px;\n}\n\n.taskDueDate{\n    height: 100%;\n}\n\n.taskEditor{\n    height:100%;\n}'],sourceRoot:""}]);const o=a},645:t=>{t.exports=function(t){var n=[];return n.toString=function(){return this.map((function(n){var e="",i=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),i&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=t(n),i&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(t,e,i,s,r){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(i)for(var o=0;o<this.length;o++){var A=this[o][0];null!=A&&(a[A]=!0)}for(var l=0;l<t.length;l++){var c=[].concat(t[l]);i&&a[c[0]]||(void 0!==r&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=r),e&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=e):c[2]=e),s&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=s):c[4]="".concat(s)),n.push(c))}},n}},537:t=>{t.exports=function(t){var n=t[1],e=t[3];if(!e)return n;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),r="/*# ".concat(s," */"),a=e.sources.map((function(t){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(t," */")}));return[n].concat(a).concat([r]).join("\n")}return[n].join("\n")}},379:t=>{var n=[];function e(t){for(var e=-1,i=0;i<n.length;i++)if(n[i].identifier===t){e=i;break}return e}function i(t,i){for(var r={},a=[],o=0;o<t.length;o++){var A=t[o],l=i.base?A[0]+i.base:A[0],c=r[l]||0,d="".concat(l," ").concat(c);r[l]=c+1;var p=e(d),h={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)n[p].references++,n[p].updater(h);else{var u=s(h,i);i.byIndex=o,n.splice(o,0,{identifier:d,updater:u,references:1})}a.push(d)}return a}function s(t,n){var e=n.domAPI(n);return e.update(t),function(n){if(n){if(n.css===t.css&&n.media===t.media&&n.sourceMap===t.sourceMap&&n.supports===t.supports&&n.layer===t.layer)return;e.update(t=n)}else e.remove()}}t.exports=function(t,s){var r=i(t=t||[],s=s||{});return function(t){t=t||[];for(var a=0;a<r.length;a++){var o=e(r[a]);n[o].references--}for(var A=i(t,s),l=0;l<r.length;l++){var c=e(r[l]);0===n[c].references&&(n[c].updater(),n.splice(c,1))}r=A}}},569:t=>{var n={};t.exports=function(t,e){var i=function(t){if(void 0===n[t]){var e=document.querySelector(t);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(t){e=null}n[t]=e}return n[t]}(t);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(e)}},216:t=>{t.exports=function(t){var n=document.createElement("style");return t.setAttributes(n,t.attributes),t.insert(n,t.options),n}},565:(t,n,e)=>{t.exports=function(t){var n=e.nc;n&&t.setAttribute("nonce",n)}},795:t=>{t.exports=function(t){var n=t.insertStyleElement(t);return{update:function(e){!function(t,n,e){var i="";e.supports&&(i+="@supports (".concat(e.supports,") {")),e.media&&(i+="@media ".concat(e.media," {"));var s=void 0!==e.layer;s&&(i+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),i+=e.css,s&&(i+="}"),e.media&&(i+="}"),e.supports&&(i+="}");var r=e.sourceMap;r&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),n.styleTagTransform(i,t,n.options)}(n,t,e)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)}}}},589:t=>{t.exports=function(t,n){if(n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}}},n={};function e(i){var s=n[i];if(void 0!==s)return s.exports;var r=n[i]={id:i,exports:{}};return t[i](r,r.exports,e),r.exports}e.n=t=>{var n=t&&t.__esModule?()=>t.default:()=>t;return e.d(n,{a:n}),n},e.d=(t,n)=>{for(var i in n)e.o(n,i)&&!e.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:n[i]})},e.o=(t,n)=>Object.prototype.hasOwnProperty.call(t,n),(()=>{var t=e(379),n=e.n(t),s=e(795),r=e.n(s),a=e(569),o=e.n(a),A=e(565),l=e.n(A),c=e(216),d=e.n(c),p=e(589),h=e.n(p),u=e(426),C={};C.styleTagTransform=h(),C.setAttributes=l(),C.insert=o().bind(null,"head"),C.domAPI=r(),C.insertStyleElement=d(),n()(u.Z,C),u.Z&&u.Z.locals&&u.Z.locals;class g{constructor(t,n,e,i,s){this.title=t,this.dueDate=new Date(Date.parse(n)),this.priority=e,this.description=i,this.project=s,this.completionStatus="no"}changeCompletionStatus(){return"yes"==this.complete.toLowerCase()?this.complete="no":this.complete="yes",this.complete}changeDate(){let t=prompt("Due Date (mm/dd/yyyy)");return this.date=new Date(Date.parse(t)),this.date}changeTitle(){return this.title=prompt(),this.title}createTaskDisplay(){const t=document.createElement("div"),n=document.createElement("div"),e=document.createElement("div"),i=document.createElement("div"),s=document.createElement("div"),r=document.createElement("div");return n.className=`priority ${this.priority}`,e.className=`${this.completionStatus}`,i.className="taskTitle",i.innerHTML=`${this.title}`,s.className="taskDueDate",s.innerHTML=`${this.dueDate.toLocaleDateString("en-US")}`,r.className="taskEditor",t.className="taskDisplay",t.appendChild(n),t.appendChild(e),t.appendChild(i),t.appendChild(s),t.appendChild(r),t}}class m{constructor(t){this.title=t,this.taskList=[]}addTask(){let t=prompt("Task Title"),n=prompt("Due Date (mm/dd/yyyy)"),e=prompt("Priority (High, Medium, Low)"),i=prompt("description"),s=this.projectTitle,r=new g(t,n,e,i,s);this.taskList.push(r)}deleteTask(t){this.taskList.splice(t,1)}createProjectDisplay(){const t=document.createElement("h1"),n=document.createElement("div"),e=document.createElement("div"),i=document.createElement("button");return t.innerHTML=this.title,i.id="addTaskButton",i.innerHTML="+  Add Task",e.id="taskDisplayHeader",e.appendChild(t),e.appendChild(i),n.id="taskListDisplay",n.appendChild(e),this.taskList.forEach(((t,e)=>{let i=t.createTaskDisplay();i.dataset.index=e,n.appendChild(i)})),n}}class y{constructor(){this.all=new m("All"),this.today=new m("Today"),this.week=new m("Week"),this.projectsList=[this.all,this.today,this.week],this.userProjectsList=[]}createNewProject(){let t=prompt("Project/List Name?");const n=new m(t);this.projectsList.push(n),this.userProjectsList.push(n),console.log(this.projectsList)}deleteProject(t){this.projectsList.splice(t+3,1),this.userProjectsList.splice(t,1)}addTask(t){this.userProjectsList[t].addTask(),this.projectsList[t+3].addTask()}compileAllTasks(){this.userProjectsList.forEach((t=>{t.forEach((t=>{this.all.taskList.push(t)}))}))}}class f{constructor(){this.projectCompiler=new y,this.projectsList=this.projectCompiler.projectsList,this.userProjectsList=this.projectCompiler.userProjectsList,this.displayBox=document.getElementById("displayBox")}createSideBarDisplay(){const t=document.getElementById("userProjectsList");this.clearSideBarDisplay(),this.userProjectsList.forEach(((n,e)=>{const i=document.createElement("button");i.className="navButton list",i.innerHTML=`${n.title}`,i.dataset.index=e+3,t.appendChild(i)}))}clearSideBarDisplay(){const t=document.getElementById("userProjectsList");for(;t.hasChildNodes();)t.removeChild(t.lastChild)}createProjectLoadDisplay(){this.projectCompiler.all.taskList.push(new g("Mock","05/15/2022","Mid","",this.projectCompiler.all.title)),this.displayBox.append(this.projectsList[0].createProjectDisplay())}changeProjectDisplay(t){this.clearProjectDisplay(),this.displayBox.append(this.projectsList[t].createProjectDisplay())}newProjectDisplay(t){this.clearProjectDisplay(),this.displayBox.append(this.userProjectsList[this.userProjectsList.length-1].createProjectDisplay()),console.log(this.userProjectsList[this.userProjectsList.length-1].title)}clearProjectDisplay(){for(;this.displayBox.hasChildNodes();)this.displayBox.removeChild(this.displayBox.lastChild)}}(new class{constructor(){this.display=new f}runTaskList(){this.display.createSideBarDisplay(),this.display.createProjectLoadDisplay(),this.addProject(),this.changeProject()}addProject(){document.getElementById("addProjectButton").addEventListener("click",(()=>{this.display.projectCompiler.createNewProject(),this.display.createSideBarDisplay(),this.display.newProjectDisplay()}))}addTask(){document.getElementById("addTaskButton").addEventListener("click",(()=>{this.display.projectCompiler.addTask(i)}))}changeProject(){document.querySelectorAll(".navButton").forEach(((t,n)=>{t.addEventListener("click",(()=>{this.display.changeProjectDisplay(n)}))}))}}).runTaskList()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,