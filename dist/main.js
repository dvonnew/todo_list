(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>o});var i=t(537),r=t.n(i),s=t(645),a=t.n(s)()(r());a.push([n.id,'body, html{\n    height: 100%;\n    width: 100%;\n    margin: 0;\n    padding: 0;\n    font-family: BlinkMacSystemFont, -apple-system, "Segoe UI", "Roboto", \n    "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", \n    "Helvetica Neue", "Helvetica", "Arial", sans-serif;\n}\n\n#layout{\n    height: 100%;\n    width: 100%;\n    margin: 0;\n    padding: 0;\n}\n\n#header{\n    height: 60px;\n    width: 100%;\n    padding-top: 10px;\n    padding-left:10px;\n    box-sizing: border-box;\n    color: white;\n    font-size: 24px;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    background-color: rgb(64, 64, 107);\n}\n\n#contentContainer{\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n}\n\n/* NavBar Styles Section */\n\n#sidebarBox{\n    height: 100%;\n    width: 25%;\n    background-color: rgb(202, 202, 202);\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n}\n\n#listDisplay{\n    height: 50%;\n    width: 80%;\n    display: flex;\n    flex-direction: column;\n}\n\n#defaultProjectList{\n    margin-top: 10px;\n    height: 30%;\n    display: flex;\n    flex-direction: column;\n\n}\n\n#userProjects{\n    height:70%;\n    display: flex;\n    flex-direction: column;\n}\n\n#userProjectsLists{\n    height:80%;\n    display: flex;\n    flex-direction: column;\n}\n\n.navButton{\n    border: none;\n    border-radius: 5px;\n    font-size: 18px;\n    background-color: rgb(202, 202, 202);\n    height: 30px;\n    width: 100%;\n    text-align: left;    \n}\n\n.navButton:hover{\n    background-color: rgb(139, 139, 139);\n}\n\n\n#addProjectButton{\n    border: none;\n    border-radius: 5px;\n    font-size: 18px;\n    background-color: rgb(202, 202, 202);\n    height: 30px;\n    width: 100%;\n    text-align: left;    \n}\n\n#addProjectButton:hover{\n    background-color: rgb(139, 139, 139);\n}\n/* Display Box Styles Section */\n\n#displayBox{\n    height: 100%;\n    width: 75%;\n    background-color: rgb(231, 231, 231);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n#taskDisplayBox{\n    max-height: 80%;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n}\n\n#displayBoxFooter{\n    margin-top: 10px;\n    height: 20%;\n    width: 100%;\n    background-color: rgb(231, 231, 231);\n    display: flex;\n    justify-content: center;\n    \n}\n\n#taskListDisplay{\n    height: 80%;\n    width: 90%;\n    margin-top: 5%;\n    vertical-align: top;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n#taskDisplayHeader{\n    margin-bottom: 3%;\n    height: 40px;\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n#addTaskButton{\n    border: 3px solid gray;\n    border-radius: 50%;\n    font-size: 36px;\n    color: gray;\n    background-color: rgb(202, 202, 202);\n    height: 40px;\n    width: 40px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n#addTaskButton:hover{\n    background-color: rgb(139, 139, 139);\n}\n\n/* task dislpay styles section */\n\n.taskDisplay{\n    height: 25px;\n    width: 100%;\n    margin-bottom: 5px;\n    text-align: left;\n    display: grid;\n    border-radius: 5px;\n    border: 2px solid grey;\n    grid-template-columns: .25fr 5fr 2fr 1fr .5fr;\n    vertical-align: middle;\n}\n\n.taskDisplay-Extended{\n    height: 150px;\n    width: 75%;\n    margin-bottom: 5px;\n    display: grid;\n    border-radius: 5px;\n    border: 3px solid rgb(255, 255, 255);\n    grid-template-columns: repeat(5, 1fr);\n    grid-auto-rows: 25px;\n}\n\n.taskPriority{\n    height: 100%;\n    border-radius: 3px;\n}\n\n.taskPriority-Extended{\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 4;\n    grid-row-end: 5;\n}\n\n.taskDescription{\n    grid-column-start: 2;\n    grid-column-end: 5;\n    grid-row-start: 2;\n    grid-row-end: 4;\n    border: 1px solid rgb(255, 255, 255);\n    background-color: grey;\n    border-radius: 5px;\n    font-size: 13px;\n}\n\n.low{\n    background-color: green;\n}\n\n.medium{\n    background-color: yellow;\n}\n\n.high{\n    background-color: red;\n}\n\n.taskCompletion{\n    height: 100%;\n}\n\n.taskTitle{\n    height: 100%;\n    font-size: 14px;\n    padding-left: 10px;\n    display: flex;\n    align-items: center;\n}\n\n.taskTitle-Extended{\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 1;\n    grid-row-end: 2;\n    justify-content: flex-start;\n    align-items: center;\n    padding-left: 10px;\n    font-size: 16px;\n}\n\n.taskDueDate{\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n}\n\n.taskDueDate-Extended{\n    grid-column-start: 3;\n    grid-column-end: 5;\n    grid-row-start: 4;\n    grid-row-end: 5;\n    display: flex;\n    justify-content: center;\n    align-items: center\n}\n\n.deleteButton{\n    border: none;\n    background-color: rgb(231, 231, 231);\n    color: rgb(231, 231, 231);\n    display:flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 5px;\n}\n\n.deleteButton:hover{\n    color: grey;\n}\n\n#editButton{\n    grid-column-start: 4;\n    grid-column-end: 5;\n    grid-row-start: 5;\n    grid-row-end: 6;\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    width: 40px;\n    border: 1px solid gray;\n    border-radius: 5px;\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:['body, html{\n    height: 100%;\n    width: 100%;\n    margin: 0;\n    padding: 0;\n    font-family: BlinkMacSystemFont, -apple-system, "Segoe UI", "Roboto", \n    "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", \n    "Helvetica Neue", "Helvetica", "Arial", sans-serif;\n}\n\n#layout{\n    height: 100%;\n    width: 100%;\n    margin: 0;\n    padding: 0;\n}\n\n#header{\n    height: 60px;\n    width: 100%;\n    padding-top: 10px;\n    padding-left:10px;\n    box-sizing: border-box;\n    color: white;\n    font-size: 24px;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    background-color: rgb(64, 64, 107);\n}\n\n#contentContainer{\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n}\n\n/* NavBar Styles Section */\n\n#sidebarBox{\n    height: 100%;\n    width: 25%;\n    background-color: rgb(202, 202, 202);\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n}\n\n#listDisplay{\n    height: 50%;\n    width: 80%;\n    display: flex;\n    flex-direction: column;\n}\n\n#defaultProjectList{\n    margin-top: 10px;\n    height: 30%;\n    display: flex;\n    flex-direction: column;\n\n}\n\n#userProjects{\n    height:70%;\n    display: flex;\n    flex-direction: column;\n}\n\n#userProjectsLists{\n    height:80%;\n    display: flex;\n    flex-direction: column;\n}\n\n.navButton{\n    border: none;\n    border-radius: 5px;\n    font-size: 18px;\n    background-color: rgb(202, 202, 202);\n    height: 30px;\n    width: 100%;\n    text-align: left;    \n}\n\n.navButton:hover{\n    background-color: rgb(139, 139, 139);\n}\n\n\n#addProjectButton{\n    border: none;\n    border-radius: 5px;\n    font-size: 18px;\n    background-color: rgb(202, 202, 202);\n    height: 30px;\n    width: 100%;\n    text-align: left;    \n}\n\n#addProjectButton:hover{\n    background-color: rgb(139, 139, 139);\n}\n/* Display Box Styles Section */\n\n#displayBox{\n    height: 100%;\n    width: 75%;\n    background-color: rgb(231, 231, 231);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n#taskDisplayBox{\n    max-height: 80%;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n}\n\n#displayBoxFooter{\n    margin-top: 10px;\n    height: 20%;\n    width: 100%;\n    background-color: rgb(231, 231, 231);\n    display: flex;\n    justify-content: center;\n    \n}\n\n#taskListDisplay{\n    height: 80%;\n    width: 90%;\n    margin-top: 5%;\n    vertical-align: top;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n#taskDisplayHeader{\n    margin-bottom: 3%;\n    height: 40px;\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n#addTaskButton{\n    border: 3px solid gray;\n    border-radius: 50%;\n    font-size: 36px;\n    color: gray;\n    background-color: rgb(202, 202, 202);\n    height: 40px;\n    width: 40px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n#addTaskButton:hover{\n    background-color: rgb(139, 139, 139);\n}\n\n/* task dislpay styles section */\n\n.taskDisplay{\n    height: 25px;\n    width: 100%;\n    margin-bottom: 5px;\n    text-align: left;\n    display: grid;\n    border-radius: 5px;\n    border: 2px solid grey;\n    grid-template-columns: .25fr 5fr 2fr 1fr .5fr;\n    vertical-align: middle;\n}\n\n.taskDisplay-Extended{\n    height: 150px;\n    width: 75%;\n    margin-bottom: 5px;\n    display: grid;\n    border-radius: 5px;\n    border: 3px solid rgb(255, 255, 255);\n    grid-template-columns: repeat(5, 1fr);\n    grid-auto-rows: 25px;\n}\n\n.taskPriority{\n    height: 100%;\n    border-radius: 3px;\n}\n\n.taskPriority-Extended{\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 4;\n    grid-row-end: 5;\n}\n\n.taskDescription{\n    grid-column-start: 2;\n    grid-column-end: 5;\n    grid-row-start: 2;\n    grid-row-end: 4;\n    border: 1px solid rgb(255, 255, 255);\n    background-color: grey;\n    border-radius: 5px;\n    font-size: 13px;\n}\n\n.low{\n    background-color: green;\n}\n\n.medium{\n    background-color: yellow;\n}\n\n.high{\n    background-color: red;\n}\n\n.taskCompletion{\n    height: 100%;\n}\n\n.taskTitle{\n    height: 100%;\n    font-size: 14px;\n    padding-left: 10px;\n    display: flex;\n    align-items: center;\n}\n\n.taskTitle-Extended{\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 1;\n    grid-row-end: 2;\n    justify-content: flex-start;\n    align-items: center;\n    padding-left: 10px;\n    font-size: 16px;\n}\n\n.taskDueDate{\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n}\n\n.taskDueDate-Extended{\n    grid-column-start: 3;\n    grid-column-end: 5;\n    grid-row-start: 4;\n    grid-row-end: 5;\n    display: flex;\n    justify-content: center;\n    align-items: center\n}\n\n.deleteButton{\n    border: none;\n    background-color: rgb(231, 231, 231);\n    color: rgb(231, 231, 231);\n    display:flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 5px;\n}\n\n.deleteButton:hover{\n    color: grey;\n}\n\n#editButton{\n    grid-column-start: 4;\n    grid-column-end: 5;\n    grid-row-start: 5;\n    grid-row-end: 6;\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    width: 40px;\n    border: 1px solid gray;\n    border-radius: 5px;\n}'],sourceRoot:""}]);const o=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",i=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),i&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),i&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,i,r,s){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(i)for(var o=0;o<this.length;o++){var A=this[o][0];null!=A&&(a[A]=!0)}for(var l=0;l<n.length;l++){var d=[].concat(n[l]);i&&a[d[0]]||(void 0!==s&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=s),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),s="/*# ".concat(r," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([s]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,i=0;i<e.length;i++)if(e[i].identifier===n){t=i;break}return t}function i(n,i){for(var s={},a=[],o=0;o<n.length;o++){var A=n[o],l=i.base?A[0]+i.base:A[0],d=s[l]||0,c="".concat(l," ").concat(d);s[l]=d+1;var p=t(c),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var h=r(u,i);i.byIndex=o,e.splice(o,0,{identifier:c,updater:h,references:1})}a.push(c)}return a}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var s=i(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<s.length;a++){var o=t(s[a]);e[o].references--}for(var A=i(n,r),l=0;l<s.length;l++){var d=t(s[l]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}s=A}}},569:n=>{var e={};n.exports=function(n,t){var i=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var i="";t.supports&&(i+="@supports (".concat(t.supports,") {")),t.media&&(i+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(i+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),i+=t.css,r&&(i+="}"),t.media&&(i+="}"),t.supports&&(i+="}");var s=t.sourceMap;s&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),e.styleTagTransform(i,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(i){var r=e[i];if(void 0!==r)return r.exports;var s=e[i]={id:i,exports:{}};return n[i](s,s.exports,t),s.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var i in e)t.o(e,i)&&!t.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:e[i]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n=t(379),e=t.n(n),i=t(795),r=t.n(i),s=t(569),a=t.n(s),o=t(565),A=t.n(o),l=t(216),d=t.n(l),c=t(589),p=t.n(c),u=t(426),h={};h.styleTagTransform=p(),h.setAttributes=A(),h.insert=a().bind(null,"head"),h.domAPI=r(),h.insertStyleElement=d(),e()(u.Z,h),u.Z&&u.Z.locals&&u.Z.locals;class C{constructor(n,e,t,i,r){this.title=n,this.dueDate=new Date(Date.parse(e)),this.priority=t,this.description=i,this.project=r,this.completionStatus="no"}changeCompletionStatus(){return"yes"==this.complete.toLowerCase()?this.complete="no":this.complete="yes",this.complete}changeDate(){let n=prompt("Due Date (mm/dd/yyyy)");return this.date=new Date(Date.parse(n)),this.date}changeTitle(){return this.title=prompt(),this.title}createTaskDisplay(){const n=document.createElement("div"),e=document.createElement("div"),t=document.createElement("div"),i=document.createElement("div"),r=document.createElement("div"),s=document.createElement("button");return e.className=`taskPriority ${this.priority}`,r.className=`${this.completionStatus}`,t.className="taskTitle",t.innerHTML=`${this.title}`,i.className="taskDueDate",i.innerHTML=`${this.dueDate.toLocaleDateString("en-US")}`,s.className="deleteButton",s.innerHTML="X",n.className="taskDisplay",n.appendChild(e),n.appendChild(t),n.appendChild(i),n.appendChild(r),n.appendChild(s),n}createExpandDisplay(){this.clearTaskDisplay();const n=document.querySelector(".taskDisplay"),e=document.createElement("div"),t=document.createElement("div"),i=document.createElement("div"),r=document.createElement("div"),s=document.createElement("div"),a=document.createElement("button");s.className=`${this.completionStatus}`,e.className="taskTitle-Extended",e.innerHTML=`${this.title}`,t.className="taskDescription",t.innerHTML=`${this.taskDescription}`,i.className=`taskPriority-Extended ${this.priority}`,r.className="taskDueDate-Extended",r.innerHTML=`${this.dueDate.toLocaleDateString("en-US")}`,a.id="editButton",a.innerHTML="Edit",n.className="taskDisplay-Extended",n.appendChild(e),n.appendChild(t),n.appendChild(i),n.appendChild(r),n.appendChild(a)}clearTaskDisplay(){const n=document.querySelector(".taskDisplay");for(;n.hasChildNodes();)n.removeChild(n.lastChild)}}class B{constructor(n,e){this.title=n,this.taskList=[],this.id=e}addTask(){let n=prompt("Task Title"),e=prompt("Due Date (mm/dd/yyyy)"),t=prompt("Priority (High, Medium, Low)"),i=prompt("description"),r=this.projectTitle,s=new C(n,e,t,i,r);this.taskList.push(s)}deleteTask(n){this.taskList.splice(n,1)}expandTask(n){this.taskList[n].createExpandDisplay()}createProjectDisplay(){const n=document.createElement("h1"),e=document.createElement("div"),t=document.createElement("div");return n.innerHTML=this.title,n.id="displayTitle",n.dataset.index=this.id,t.id="taskDisplayHeader",t.appendChild(n),e.id="taskListDisplay",e.appendChild(t),this.taskList.forEach(((n,t)=>{let i=n.createTaskDisplay();i.dataset.index=t,e.appendChild(i)})),e}}class g{constructor(){this.all=new B("All",0),this.today=new B("Today",1),this.week=new B("Week",2),this.projectsList=[this.all,this.today,this.week],this.userProjectsList=[]}createNewProject(){let n=prompt("Project/List Name?"),e=this.projectsList.length;const t=new B(n,e);this.projectsList.push(t),this.userProjectsList.push(t)}deleteProject(n){this.projectsList.splice(n,1),this.userProjectsList.splice(n-3,1)}addTask(n){n>0?this.projectsList[n].addTask():this.all.addTask(),this.compileAllTasks(n)}expandTask(n,e){this.projectsList[n].expandTask(e)}compileAllTasks(n){n>0&&(this.all.taskList.splice(this.all.taskList.length+1,this.all.taskList.length-1),console.log(this.all.taskList),this.userProjectsList.forEach((n=>{n.taskList.forEach((n=>{this.all.taskList.push(n)}))})))}deleteTask(n,e){this.projectsList[e].deleteTask(n),this.compileAllTasks(n)}}class m{constructor(){this.projectCompiler=new g,this.projectsList=this.projectCompiler.projectsList,this.userProjectsList=this.projectCompiler.userProjectsList,this.taskDisplayBox=document.getElementById("taskDisplayBox")}createSideBarDisplay(){const n=document.getElementById("userProjectsList");return this.clearSideBarDisplay(),this.userProjectsList.forEach(((e,t)=>{const i=document.createElement("button");i.className="navButton list",i.innerHTML=`${e.title}`,i.dataset.index=t+3,n.appendChild(i)})),n}clearSideBarDisplay(){const n=document.getElementById("userProjectsList");for(;n.hasChildNodes();)n.removeChild(n.lastChild)}createProjectLoadDisplay(){this.projectCompiler.all.taskList.push(new C("Mock","05/15/2022","medium","",this.projectCompiler.all.title)),this.taskDisplayBox.append(this.projectsList[0].createProjectDisplay())}createProjectDisplay(n){this.taskDisplayBox.append(this.projectsList[n].createProjectDisplay())}changeProjectDisplay(n){this.clearProjectDisplay(),this.taskDisplayBox.append(this.projectsList[n].createProjectDisplay())}newProjectDisplay(){this.clearProjectDisplay(),this.taskDisplayBox.append(this.projectsList[this.projectsList.length-1].createProjectDisplay()),console.log(this.projectsList[this.projectsList.length-1].title)}clearProjectDisplay(){for(;this.taskDisplayBox.hasChildNodes();)this.taskDisplayBox.removeChild(this.taskDisplayBox.lastChild)}expandTask(n,e){this.projectCompiler.expandTask(n,e)}deleteTask(n,e){this.projectCompiler.deleteTask(n,e)}}(new class{constructor(){this.display=new m}runTaskList(){this.display.createSideBarDisplay(),this.display.createProjectLoadDisplay();let n=document.getElementById("addTaskButton");document.getElementById("addProjectButton").addEventListener("click",(()=>{this.addProject()})),n.addEventListener("click",(()=>{let n=document.getElementById("displayTitle").dataset.index;this.addTask(n)})),this.changeProject(),this.expandTaskDisplay(),this.deleteTask()}addProject(){this.display.projectCompiler.createNewProject(),this.display.createSideBarDisplay(),this.display.newProjectDisplay()}addTask(){let n=parseInt(document.getElementById("displayTitle").dataset.index);this.display.projectCompiler.addTask(n),this.display.changeProjectDisplay(n)}changeProject(){let n=document.getElementsByClassName("navButton");for(let e=0;e<n.length;e++)n[e].addEventListener("click",(()=>{this.display.changeProjectDisplay(e),console.log(n)}))}expandTaskDisplay(){let n=document.getElementsByClassName("taskTitle");for(let e=0;e<n.length;e++)n[e].addEventListener("click",(()=>{let n=document.getElementById("displayTitle").dataset.index;this.display.expandTask(n,e)}))}deleteTask(){let n=document.getElementsByClassName("deleteButton");for(let e=0;e<n.length;e++)n[e].addEventListener("click",(()=>{let n=document.getElementById("displayTitle").dataset.index;this.display.deleteTask(e,n),this.display.changeProjectDisplay(n)}))}}).runTaskList()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,