(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>a});var i=t(537),r=t.n(i),A=t(645),o=t.n(A)()(r());o.push([n.id,'body, html{\n    height: 100%;\n    width: 100%;\n    margin: 0;\n    padding: 0;\n    font-family: BlinkMacSystemFont, -apple-system, "Segoe UI", "Roboto", \n    "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", \n    "Helvetica Neue", "Helvetica", "Arial", sans-serif;\n}\n\n#layout{\n    height: 100%;\n    width: 100%;\n    margin: 0;\n    padding: 0;\n}\n\n#header{\n    height: 60px;\n    width: 100%;\n    padding-top: 10px;\n    padding-left:10px;\n    box-sizing: border-box;\n    color: white;\n    font-size: 24px;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    background-color: rgb(64, 64, 107);\n}\n\n#contentContainer{\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n}\n\n/* NavBar Styles Section */\n\n#sidebarBox{\n    height: 100%;\n    width: 25%;\n    background-color: rgb(202, 202, 202);\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n}\n\n#listDisplay{\n    height: 50%;\n    width: 80%;\n    display: flex;\n    flex-direction: column;\n}\n\n#defaultProjectList{\n    margin-top: 10px;\n    height: 30%;\n    display: flex;\n    flex-direction: column;\n\n}\n\n#userProjects{\n    height:70%;\n    display: flex;\n    flex-direction: column;\n}\n\n#userProjectsLists{\n    height:80%;\n    display: flex;\n    flex-direction: column;\n}\n\n.navButton{\n    border: none;\n    border-radius: 5px;\n    font-size: 18px;\n    background-color: rgb(202, 202, 202);\n    height: 30px;\n    width: 100%;\n    text-align: left;    \n}\n\n.navButton:hover{\n    background-color: rgb(139, 139, 139);\n}\n\n\n#addProjectButton{\n    border: none;\n    border-radius: 5px;\n    font-size: 18px;\n    background-color: rgb(202, 202, 202);\n    height: 30px;\n    width: 100%;\n    text-align: left;    \n}\n\n#addProjectButton:hover{\n    background-color: rgb(139, 139, 139);\n}\n/* Display Box Styles Section */\n\n#displayBox{\n    height: 100%;\n    width: 75%;\n    background-color: rgb(231, 231, 231);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n#taskDisplayBox{\n    max-height: 80%;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n}\n\n#displayBoxFooter{\n    margin-top: 10px;\n    height: 20%;\n    width: 100%;\n    background-color: rgb(231, 231, 231);\n    display: flex;\n    justify-content: center;\n    \n}\n\n#taskListDisplay{\n    height: 80%;\n    width: 90%;\n    margin-top: 5%;\n    vertical-align: top;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n#taskDisplayHeader{\n    margin-bottom: 3%;\n    height: 40px;\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n#addTaskButton{\n    border: 3px solid gray;\n    border-radius: 50%;\n    font-size: 36px;\n    color: gray;\n    background-color: rgb(202, 202, 202);\n    height: 40px;\n    width: 40px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n#addTaskButton:hover{\n    background-color: rgb(139, 139, 139);\n}\n\n/* task dislpay styles section */\n\n.taskDisplay{\n    height: 30px;\n    width: 100%;\n    margin-bottom: 5px;\n    text-align: left;\n    display: grid;\n    border-radius: 5px;\n    border: 2px solid grey;\n    grid-template-columns: .25fr 5fr 2fr 1fr .5fr;\n    vertical-align: middle;\n}\n\n.taskPriority{\n    height: 100%;\n    border-radius: 3px;\n}\n\n.taskDisplay-Completed{\n    height: 25px;\n    width: 100%;\n    color: white;\n    background-color: grey;\n    margin-bottom: 5px;\n    text-align: left;\n    display: grid;\n    border-radius: 5px;\n    border: 2px solid grey;\n    grid-template-columns: .25fr 5fr 2fr 1fr .5fr;\n    vertical-align: middle;\n}\n\n.taskDescription{\n    grid-column-start: 1;\n    grid-column-end: 5;\n    grid-row-start: 2;\n    grid-row-end: 4;\n    border: 1px solid rgb(255, 255, 255);\n    border-radius: 5px;\n    font-size: 13px;\n}\n\n.low{\n    background-color: green;\n}\n\n.medium{\n    background-color: yellow;\n}\n\n.high{\n    background-color: red;\n}\n\n.completionStatus{\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.no{\n    height: 15px;\n    width: 15px;\n    border-radius: 5px;\n    border: .5px solid rgb(192, 192, 192);\n}\n\n.no:hover{\n    border-radius: 5px;\n    height: 15px;\n    width: 15px;\n    border: .5px solid grey;\n    background-color: grey;\n}\n\n.yes{\n    border-radius: 5px;\n    height: 15px;\n    width: 15px;\n    border: .5px solid white;\n    background-color: grey;\n}\n\n.yes:hover{\n    height: 15px;\n    width: 15px;\n    border-radius: 5px;\n    border: .5px solid rgb(192, 192, 192);\n    background-color: rgb(231, 231, 231);\n}\n\n.taskTitle{\n    height: 100%;\n    font-size: 14px;\n    padding-left: 10px;\n    display: flex;\n    align-items: center;\n}\n\n.taskDueDate{\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n}\n\n.deleteButton{\n    border: none;\n    background-color: rgb(231, 231, 231);\n    color: rgb(231, 231, 231);\n    display:flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 5px;\n}\n\n.deleteButton:hover{\n    color: grey;\n}\n\n/* Add Task Display */\n\n.addTaskDisplay{\n    height: 30px;\n    width: 100%;\n    margin-bottom: 5px;\n    text-align: left;\n    display: grid;\n    border-radius: 5px;\n    border: 2px solid grey;\n    grid-template-columns: 4fr 4fr 2fr 1fr 1fr;\n    vertical-align: middle;\n}\n\n.titleInput{\n    border: none;\n    border-radius: 2px;\n    height: 90%;\n    font-size: 14px;\n    padding-left: 10px;\n    display: flex;\n    align-items: center;\n}\n\n.dueDateInput{\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    border:none;\n}\n\n.priorityInput{\n    height: 100%;\n    border: none;\n}\n\n#submitButton, #cancelButton{\n    display:flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 5px;\n}\n\n#cancelButton:hover, #submitButton:hover{\n    display:flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 5px;\n    background-color: grey;\n    color: white;\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:['body, html{\n    height: 100%;\n    width: 100%;\n    margin: 0;\n    padding: 0;\n    font-family: BlinkMacSystemFont, -apple-system, "Segoe UI", "Roboto", \n    "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", \n    "Helvetica Neue", "Helvetica", "Arial", sans-serif;\n}\n\n#layout{\n    height: 100%;\n    width: 100%;\n    margin: 0;\n    padding: 0;\n}\n\n#header{\n    height: 60px;\n    width: 100%;\n    padding-top: 10px;\n    padding-left:10px;\n    box-sizing: border-box;\n    color: white;\n    font-size: 24px;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    background-color: rgb(64, 64, 107);\n}\n\n#contentContainer{\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n}\n\n/* NavBar Styles Section */\n\n#sidebarBox{\n    height: 100%;\n    width: 25%;\n    background-color: rgb(202, 202, 202);\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n}\n\n#listDisplay{\n    height: 50%;\n    width: 80%;\n    display: flex;\n    flex-direction: column;\n}\n\n#defaultProjectList{\n    margin-top: 10px;\n    height: 30%;\n    display: flex;\n    flex-direction: column;\n\n}\n\n#userProjects{\n    height:70%;\n    display: flex;\n    flex-direction: column;\n}\n\n#userProjectsLists{\n    height:80%;\n    display: flex;\n    flex-direction: column;\n}\n\n.navButton{\n    border: none;\n    border-radius: 5px;\n    font-size: 18px;\n    background-color: rgb(202, 202, 202);\n    height: 30px;\n    width: 100%;\n    text-align: left;    \n}\n\n.navButton:hover{\n    background-color: rgb(139, 139, 139);\n}\n\n\n#addProjectButton{\n    border: none;\n    border-radius: 5px;\n    font-size: 18px;\n    background-color: rgb(202, 202, 202);\n    height: 30px;\n    width: 100%;\n    text-align: left;    \n}\n\n#addProjectButton:hover{\n    background-color: rgb(139, 139, 139);\n}\n/* Display Box Styles Section */\n\n#displayBox{\n    height: 100%;\n    width: 75%;\n    background-color: rgb(231, 231, 231);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n#taskDisplayBox{\n    max-height: 80%;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n}\n\n#displayBoxFooter{\n    margin-top: 10px;\n    height: 20%;\n    width: 100%;\n    background-color: rgb(231, 231, 231);\n    display: flex;\n    justify-content: center;\n    \n}\n\n#taskListDisplay{\n    height: 80%;\n    width: 90%;\n    margin-top: 5%;\n    vertical-align: top;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n#taskDisplayHeader{\n    margin-bottom: 3%;\n    height: 40px;\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n#addTaskButton{\n    border: 3px solid gray;\n    border-radius: 50%;\n    font-size: 36px;\n    color: gray;\n    background-color: rgb(202, 202, 202);\n    height: 40px;\n    width: 40px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n#addTaskButton:hover{\n    background-color: rgb(139, 139, 139);\n}\n\n/* task dislpay styles section */\n\n.taskDisplay{\n    height: 30px;\n    width: 100%;\n    margin-bottom: 5px;\n    text-align: left;\n    display: grid;\n    border-radius: 5px;\n    border: 2px solid grey;\n    grid-template-columns: .25fr 5fr 2fr 1fr .5fr;\n    vertical-align: middle;\n}\n\n.taskPriority{\n    height: 100%;\n    border-radius: 3px;\n}\n\n.taskDisplay-Completed{\n    height: 25px;\n    width: 100%;\n    color: white;\n    background-color: grey;\n    margin-bottom: 5px;\n    text-align: left;\n    display: grid;\n    border-radius: 5px;\n    border: 2px solid grey;\n    grid-template-columns: .25fr 5fr 2fr 1fr .5fr;\n    vertical-align: middle;\n}\n\n.taskDescription{\n    grid-column-start: 1;\n    grid-column-end: 5;\n    grid-row-start: 2;\n    grid-row-end: 4;\n    border: 1px solid rgb(255, 255, 255);\n    border-radius: 5px;\n    font-size: 13px;\n}\n\n.low{\n    background-color: green;\n}\n\n.medium{\n    background-color: yellow;\n}\n\n.high{\n    background-color: red;\n}\n\n.completionStatus{\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.no{\n    height: 15px;\n    width: 15px;\n    border-radius: 5px;\n    border: .5px solid rgb(192, 192, 192);\n}\n\n.no:hover{\n    border-radius: 5px;\n    height: 15px;\n    width: 15px;\n    border: .5px solid grey;\n    background-color: grey;\n}\n\n.yes{\n    border-radius: 5px;\n    height: 15px;\n    width: 15px;\n    border: .5px solid white;\n    background-color: grey;\n}\n\n.yes:hover{\n    height: 15px;\n    width: 15px;\n    border-radius: 5px;\n    border: .5px solid rgb(192, 192, 192);\n    background-color: rgb(231, 231, 231);\n}\n\n.taskTitle{\n    height: 100%;\n    font-size: 14px;\n    padding-left: 10px;\n    display: flex;\n    align-items: center;\n}\n\n.taskDueDate{\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n}\n\n.deleteButton{\n    border: none;\n    background-color: rgb(231, 231, 231);\n    color: rgb(231, 231, 231);\n    display:flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 5px;\n}\n\n.deleteButton:hover{\n    color: grey;\n}\n\n/* Add Task Display */\n\n.addTaskDisplay{\n    height: 30px;\n    width: 100%;\n    margin-bottom: 5px;\n    text-align: left;\n    display: grid;\n    border-radius: 5px;\n    border: 2px solid grey;\n    grid-template-columns: 4fr 4fr 2fr 1fr 1fr;\n    vertical-align: middle;\n}\n\n.titleInput{\n    border: none;\n    border-radius: 2px;\n    height: 90%;\n    font-size: 14px;\n    padding-left: 10px;\n    display: flex;\n    align-items: center;\n}\n\n.dueDateInput{\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    border:none;\n}\n\n.priorityInput{\n    height: 100%;\n    border: none;\n}\n\n#submitButton, #cancelButton{\n    display:flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 5px;\n}\n\n#cancelButton:hover, #submitButton:hover{\n    display:flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 5px;\n    background-color: grey;\n    color: white;\n}'],sourceRoot:""}]);const a=o},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",i=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),i&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),i&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,i,r,A){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(i)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(o[s]=!0)}for(var l=0;l<n.length;l++){var d=[].concat(n[l]);i&&o[d[0]]||(void 0!==A&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=A),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),A="/*# ".concat(r," */"),o=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(o).concat([A]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,i=0;i<e.length;i++)if(e[i].identifier===n){t=i;break}return t}function i(n,i){for(var A={},o=[],a=0;a<n.length;a++){var s=n[a],l=i.base?s[0]+i.base:s[0],d=A[l]||0,c="".concat(l," ").concat(d);A[l]=d+1;var p=t(c),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var h=r(u,i);i.byIndex=a,e.splice(a,0,{identifier:c,updater:h,references:1})}o.push(c)}return o}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var A=i(n=n||[],r=r||{});return function(n){n=n||[];for(var o=0;o<A.length;o++){var a=t(A[o]);e[a].references--}for(var s=i(n,r),l=0;l<A.length;l++){var d=t(A[l]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}A=s}}},569:n=>{var e={};n.exports=function(n,t){var i=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var i="";t.supports&&(i+="@supports (".concat(t.supports,") {")),t.media&&(i+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(i+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),i+=t.css,r&&(i+="}"),t.media&&(i+="}"),t.supports&&(i+="}");var A=t.sourceMap;A&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(A))))," */")),e.styleTagTransform(i,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(i){var r=e[i];if(void 0!==r)return r.exports;var A=e[i]={id:i,exports:{}};return n[i](A,A.exports,t),A.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var i in e)t.o(e,i)&&!t.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:e[i]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n=t(379),e=t.n(n),i=t(795),r=t.n(i),A=t(569),o=t.n(A),a=t(565),s=t.n(a),l=t(216),d=t.n(l),c=t(589),p=t.n(c),u=t(426),h={};h.styleTagTransform=p(),h.setAttributes=s(),h.insert=o().bind(null,"head"),h.domAPI=r(),h.insertStyleElement=d(),e()(u.Z,h),u.Z&&u.Z.locals&&u.Z.locals;class C{constructor(n,e,t){this.title=n,this.dueDate=new Date(Date.parse(e)),this.priority=t,this.completionStatus="no"}getTitle(){return this.title}getDate(){return this.dueDate.toLocaleDateString("en-US")}getPriority(){return this.priority}getCompletionStatus(){return this.completionStatus}changeCompletionStatus(){return"yes"===this.completionStatus?this.completionStatus="no":this.completionStatus="yes",this.completionStatus}}class B{constructor(n,e){this.title=n,this.taskList=[],this.id=e}addTask(n,e,t){let i=new C(n,e,t);this.taskList.push(i)}getTasks(){this.taskList.forEach((n=>n))}deleteTask(n){this.taskList.splice(n,1)}completeTask(n){this.taskList[n].changeCompletionStatus()}}class g{constructor(){this.all=new B("All",0),this.today=new B("Today",1),this.week=new B("Week",2),this.projectsList=[this.all,this.today,this.week]}createNewProject(){let n=prompt("Project/List Name?"),e=this.projectsList.length;const t=new B(n,e);this.projectsList.push(t)}deleteProject(n){this.projectsList.splice(n,1),this.compileDefaultLists()}addTask(n,e,t,i){this.projectsList[n].addTask(e,t,i),this.compileDefaultLists()}deleteTask(n,e){let t=this.projectsList[n].taskList[e];this.projectsList.forEach((n=>{n.taskList.includes(t)&&n.deleteTask(n.taskList.indexOf(t))})),this.compileDefaultLists()}completeTask(n,e){this.projectsList[n].completeTask(e),this.compileDefaultLists()}compileDefaultLists(){this.compileAllTasks(),this.compileTodaysTasks()}compileAllTasks(){this.projectsList.forEach(((n,e)=>{e>2&&n.taskList.forEach((n=>{this.all.taskList.includes(n)||this.all.taskList.push(n)}))}))}compileTodaysTasks(){let n=new Date,e=`${n.getMonth()+1}/${n.getDate()}/${n.getFullYear()}`;this.today.taskList=[],this.all.taskList.forEach((n=>{n.dueDate.toLocaleDateString("en-US")===e&&this.today.taskList.push(n)}))}}class m{constructor(){this.projectsCompiler=new g,this.taskDisplayBox=document.getElementById("taskDisplayBox")}createSideBarDisplay(){this.clearSideBarDisplay();const n=document.getElementById("userProjectsList");this.projectsCompiler.projectsList.forEach(((e,t)=>{if(t>2){let i=document.createElement("button");i.className="navButton list",i.innerHTML=`${e.title}`,i.dataset.index=t+3,i.addEventListener("click",(()=>{this.changeProjectDisplay(t)})),n.appendChild(i)}}))}createDefaultDisplay(){this.projectsCompiler.all.taskList.push(new C("Mock","05/15/2022","medium",0,this.projectsCompiler.all.title)),this.taskDisplayBox.append(this.createTaskListDisplay(this.projectsCompiler.all))}createTaskListDisplay(n){const e=document.createElement("h1"),t=document.createElement("div"),i=document.createElement("div");return e.innerHTML=n.title,e.id="displayTitle",e.dataset.index=n.id,i.id="taskDisplayHeader",i.appendChild(e),t.id="taskListDisplay",t.appendChild(i),n.taskList.forEach(((e,i)=>{t.appendChild(this.createTaskDisplay(n,e,i))})),t}createTaskDisplay(n,e,t){const i=document.createElement("div"),r=document.createElement("div"),A=document.createElement("div"),o=document.createElement("div"),a=document.createElement("div"),s=document.createElement("div"),l=document.createElement("button");return r.className=`taskPriority ${e.getPriority()}`,a.className="completionStatus",a.appendChild(s),s.className=`${e.getCompletionStatus()}`,s.addEventListener("click",(()=>{this.completeTask(n.id,t),"yes"==e.getCompletionStatus()?i.className="taskDisplay-Completed":i.className="taskDisplay"})),"yes"==e.getCompletionStatus()?i.className="taskDisplay-Completed":i.className="taskDisplay",A.className="taskTitle",A.innerHTML=`${e.getTitle()}`,o.className="taskDueDate",o.innerHTML=`${e.getDate()}`,l.className="deleteButton",l.innerHTML="X",l.addEventListener("click",(()=>{this.deleteTask(n.id,t)})),i.appendChild(r),i.appendChild(A),i.appendChild(o),i.appendChild(a),i.appendChild(l),i}createAddTaskDisplay(){const n=document.createElement("div"),e=document.createElement("input"),t=document.createElement("input"),i=document.createElement("select"),r=document.createElement("button"),A=document.createElement("button");n.className="addTaskDisplay",e.setAttribute("type","text"),e.setAttribute("value","Task Title..."),e.className="titleInput",t.setAttribute("type","date"),t.className="dueDateInput",i.innerHTML="\n            <option value='low'>Low</option> \n\n            <option value='medium'>Medium</option> \n\n            <option value='high'>High</option>",i.className="priorityInput",r.id="submitButton",r.innerHTML="Submit",r.addEventListener("click",(()=>{if("Task Title..."==e.value||""==e.value)return void alert("Please enter a task title");let n=e.value,r=t.valueAsDate,A=i.value;this.submitAddTaskEventListener(n,r,A)})),A.innerHTML="Cancel",A.id="cancelButton",A.addEventListener("click",(()=>{for(;n.hasChildNodes();)n.removeChild(n.lastChild);taskListDisplay.removeChild(n)})),n.appendChild(e),n.appendChild(t),n.appendChild(i),n.appendChild(r),n.appendChild(A),taskListDisplay.appendChild(n)}submitAddTaskEventListener(n,e,t){let i=parseInt(document.getElementById("displayTitle").dataset.index);this.projectsCompiler.addTask(i,n,e,t),this.changeProjectDisplay(i)}addProject(){this.projectsCompiler.createNewProject(),this.createSideBarDisplay(),this.changeProjectDisplay(this.projectsCompiler.projectsList[this.projectsCompiler.projectsList.length-1].id)}clearSideBarDisplay(){const n=document.getElementById("userProjectsList");for(;n.hasChildNodes();)n.removeChild(n.lastChild)}changeProjectDisplay(n){this.clearProjectDisplay(),this.taskDisplayBox.append(this.createTaskListDisplay(this.projectsCompiler.projectsList[n]))}clearProjectDisplay(){for(;this.taskDisplayBox.hasChildNodes();)this.taskDisplayBox.removeChild(this.taskDisplayBox.lastChild)}completeTask(n,e){this.projectsCompiler.completeTask(n,e),this.changeProjectDisplay(n)}deleteTask(n,e){this.projectsCompiler.deleteTask(n,e),this.changeProjectDisplay(n)}}(new class{constructor(){this.display=new m}run(){this.display.createSideBarDisplay(),this.display.createDefaultDisplay();let n=document.getElementById("addTaskButton"),e=document.querySelectorAll(".default.navButton"),t=document.getElementById("addProjectButton");e.forEach(((n,e)=>{n.addEventListener("click",(()=>{this.display.changeProjectDisplay(e)}))})),n.addEventListener("click",(()=>{this.display.createAddTaskDisplay()})),t.addEventListener("click",(()=>{this.display.addProject()}))}}).run()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,